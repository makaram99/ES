;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/23/2020 4:38:23 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2816      	GOTO       22
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0820      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000A	0x2003      	CALL       _____DoICP
0x000B	0x118A      	BCF        PCLATH, 3
0x000C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000F	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0010	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0011	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0012	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0013	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0014	0x280A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0015	0x0008      	RETURN
; end of ___CC2DW
_main:
;counter on click.c,28 :: 		void main() {
;counter on click.c,30 :: 		char segment[] = {zero, one, two, three, four, five, six, seven, eight, nine};
0x0016	0x303F      	MOVLW      63
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x00A2      	MOVWF      main_segment_L0
0x001A	0x3006      	MOVLW      6
0x001B	0x00A3      	MOVWF      main_segment_L0+1
0x001C	0x305B      	MOVLW      91
0x001D	0x00A4      	MOVWF      main_segment_L0+2
0x001E	0x304F      	MOVLW      79
0x001F	0x00A5      	MOVWF      main_segment_L0+3
0x0020	0x3066      	MOVLW      102
0x0021	0x00A6      	MOVWF      main_segment_L0+4
0x0022	0x306D      	MOVLW      109
0x0023	0x00A7      	MOVWF      main_segment_L0+5
0x0024	0x307D      	MOVLW      125
0x0025	0x00A8      	MOVWF      main_segment_L0+6
0x0026	0x3007      	MOVLW      7
0x0027	0x00A9      	MOVWF      main_segment_L0+7
0x0028	0x307F      	MOVLW      127
0x0029	0x00AA      	MOVWF      main_segment_L0+8
0x002A	0x306F      	MOVLW      111
0x002B	0x00AB      	MOVWF      main_segment_L0+9
0x002C	0x01AC      	CLRF       main_count_L0
;counter on click.c,33 :: 		trisb = 7; portb = 0;    //port of switches & set O/P pins to GND
0x002D	0x3007      	MOVLW      7
0x002E	0x1683      	BSF        STATUS, 5
0x002F	0x0086      	MOVWF      TRISB
0x0030	0x1283      	BCF        STATUS, 5
0x0031	0x0186      	CLRF       PORTB
;counter on click.c,34 :: 		trisc = 0; portc = segment[count];    //display zero
0x0032	0x1683      	BSF        STATUS, 5
0x0033	0x0187      	CLRF       TRISC
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x082C      	MOVF       main_count_L0, 0
0x0036	0x3E22      	ADDLW      main_segment_L0
0x0037	0x0084      	MOVWF      FSR
0x0038	0x0800      	MOVF       INDF, 0
0x0039	0x0087      	MOVWF      PORTC
;counter on click.c,36 :: 		while (start == 1);   //check start switch active low
L_main0:
0x003A	0x1C06      	BTFSS      PORTB, 0
0x003B	0x283D      	GOTO       L_main1
0x003C	0x283A      	GOTO       L_main0
L_main1:
;counter on click.c,38 :: 		check_up:
___main_check_up:
;counter on click.c,39 :: 		if(up_switch == 0)
0x003D	0x1886      	BTFSC      PORTB, 1
0x003E	0x285C      	GOTO       L_main2
;counter on click.c,41 :: 		if (count == 9)
0x003F	0x082C      	MOVF       main_count_L0, 0
0x0040	0x3A09      	XORLW      9
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2853      	GOTO       L_main3
;counter on click.c,43 :: 		high_led = 1;
0x0043	0x1586      	BSF        PORTB, 3
;counter on click.c,44 :: 		delay_ms(2000);
0x0044	0x3015      	MOVLW      21
0x0045	0x00FB      	MOVWF      R11
0x0046	0x304B      	MOVLW      75
0x0047	0x00FC      	MOVWF      R12
0x0048	0x30BE      	MOVLW      190
0x0049	0x00FD      	MOVWF      R13
L_main4:
0x004A	0x0BFD      	DECFSZ     R13, 1
0x004B	0x284A      	GOTO       L_main4
0x004C	0x0BFC      	DECFSZ     R12, 1
0x004D	0x284A      	GOTO       L_main4
0x004E	0x0BFB      	DECFSZ     R11, 1
0x004F	0x284A      	GOTO       L_main4
0x0050	0x0000      	NOP
;counter on click.c,45 :: 		high_led = 0;
0x0051	0x1186      	BCF        PORTB, 3
;counter on click.c,46 :: 		goto check_down;
0x0052	0x285C      	GOTO       ___main_check_down
;counter on click.c,47 :: 		}
L_main3:
;counter on click.c,48 :: 		portc = segment[++count];     //increase count and display
0x0053	0x0AAC      	INCF       main_count_L0, 1
0x0054	0x082C      	MOVF       main_count_L0, 0
0x0055	0x3E22      	ADDLW      main_segment_L0
0x0056	0x0084      	MOVWF      FSR
0x0057	0x0800      	MOVF       INDF, 0
0x0058	0x0087      	MOVWF      PORTC
;counter on click.c,49 :: 		while(up_switch == 0);
L_main5:
0x0059	0x1886      	BTFSC      PORTB, 1
0x005A	0x285C      	GOTO       L_main6
0x005B	0x2859      	GOTO       L_main5
L_main6:
;counter on click.c,50 :: 		}
L_main2:
;counter on click.c,52 :: 		check_down:
___main_check_down:
;counter on click.c,53 :: 		if(down_switch == 0)
0x005C	0x1906      	BTFSC      PORTB, 2
0x005D	0x287B      	GOTO       L_main7
;counter on click.c,55 :: 		if (count == 0)
0x005E	0x082C      	MOVF       main_count_L0, 0
0x005F	0x3A00      	XORLW      0
0x0060	0x1D03      	BTFSS      STATUS, 2
0x0061	0x2872      	GOTO       L_main8
;counter on click.c,57 :: 		low_led = 1;
0x0062	0x1606      	BSF        PORTB, 4
;counter on click.c,58 :: 		delay_ms(2000);
0x0063	0x3015      	MOVLW      21
0x0064	0x00FB      	MOVWF      R11
0x0065	0x304B      	MOVLW      75
0x0066	0x00FC      	MOVWF      R12
0x0067	0x30BE      	MOVLW      190
0x0068	0x00FD      	MOVWF      R13
L_main9:
0x0069	0x0BFD      	DECFSZ     R13, 1
0x006A	0x2869      	GOTO       L_main9
0x006B	0x0BFC      	DECFSZ     R12, 1
0x006C	0x2869      	GOTO       L_main9
0x006D	0x0BFB      	DECFSZ     R11, 1
0x006E	0x2869      	GOTO       L_main9
0x006F	0x0000      	NOP
;counter on click.c,59 :: 		low_led = 0;
0x0070	0x1206      	BCF        PORTB, 4
;counter on click.c,60 :: 		goto check_up;
0x0071	0x283D      	GOTO       ___main_check_up
;counter on click.c,61 :: 		}
L_main8:
;counter on click.c,62 :: 		portc = segment[--count];     //increase count and display
0x0072	0x03AC      	DECF       main_count_L0, 1
0x0073	0x082C      	MOVF       main_count_L0, 0
0x0074	0x3E22      	ADDLW      main_segment_L0
0x0075	0x0084      	MOVWF      FSR
0x0076	0x0800      	MOVF       INDF, 0
0x0077	0x0087      	MOVWF      PORTC
;counter on click.c,63 :: 		while(down_switch == 0);
L_main10:
0x0078	0x1906      	BTFSC      PORTB, 2
0x0079	0x287B      	GOTO       L_main11
0x007A	0x2878      	GOTO       L_main10
L_main11:
;counter on click.c,64 :: 		}
L_main7:
;counter on click.c,65 :: 		goto check_up;
0x007B	0x283D      	GOTO       ___main_check_up
;counter on click.c,66 :: 		}
L_end_main:
0x007C	0x287C      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [12]    ___CC2DW
0x0016     [103]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022      [10]    main_segment_L0
0x002C       [1]    main_count_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  ___main_check_up
  L_main2
  L_main3
  L_main4
  ___main_check_down
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
