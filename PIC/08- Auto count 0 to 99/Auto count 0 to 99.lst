;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/24/2020 7:05:53 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2803      	GOTO       3
_main:
;Auto count 0 to 99.c,11 :: 		void main()
;Auto count 0 to 99.c,12 :: 		{   char segment[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};      //for CC 7-SEG
0x0003	0x303F      	MOVLW      63
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00A4      	MOVWF      main_segment_L0
0x0007	0x3006      	MOVLW      6
0x0008	0x00A5      	MOVWF      main_segment_L0+1
0x0009	0x305B      	MOVLW      91
0x000A	0x00A6      	MOVWF      main_segment_L0+2
0x000B	0x304F      	MOVLW      79
0x000C	0x00A7      	MOVWF      main_segment_L0+3
0x000D	0x3066      	MOVLW      102
0x000E	0x00A8      	MOVWF      main_segment_L0+4
0x000F	0x306D      	MOVLW      109
0x0010	0x00A9      	MOVWF      main_segment_L0+5
0x0011	0x307D      	MOVLW      125
0x0012	0x00AA      	MOVWF      main_segment_L0+6
0x0013	0x3007      	MOVLW      7
0x0014	0x00AB      	MOVWF      main_segment_L0+7
0x0015	0x307F      	MOVLW      127
0x0016	0x00AC      	MOVWF      main_segment_L0+8
0x0017	0x306F      	MOVLW      111
0x0018	0x00AD      	MOVWF      main_segment_L0+9
;Auto count 0 to 99.c,14 :: 		trisb = 0;    seg2 = segment[0];
0x0019	0x1683      	BSF        STATUS, 5
0x001A	0x0186      	CLRF       TRISB
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x0824      	MOVF       main_segment_L0, 0
0x001D	0x0086      	MOVWF      PORTB
;Auto count 0 to 99.c,15 :: 		trisc = 0;    seg1 = segment[0];;
0x001E	0x1683      	BSF        STATUS, 5
0x001F	0x0187      	CLRF       TRISC
0x0020	0x1283      	BCF        STATUS, 5
0x0021	0x0824      	MOVF       main_segment_L0, 0
0x0022	0x0087      	MOVWF      PORTC
;Auto count 0 to 99.c,17 :: 		while (start == 1);  //check start butoon released
L_main0:
0x0023	0x1C08      	BTFSS      PORTD, 0
0x0024	0x2826      	GOTO       L_main1
0x0025	0x2823      	GOTO       L_main0
L_main1:
;Auto count 0 to 99.c,19 :: 		for(;;)
L_main2:
;Auto count 0 to 99.c,21 :: 		char ones = 0, tens = 0;
0x0026	0x01A2      	CLRF       main_ones_L1
0x0027	0x01A3      	CLRF       main_tens_L1
;Auto count 0 to 99.c,22 :: 		for(tens=0; tens<=9; tens++)
0x0028	0x01A3      	CLRF       main_tens_L1
L_main5:
0x0029	0x0823      	MOVF       main_tens_L1, 0
0x002A	0x3C09      	SUBLW      9
0x002B	0x1C03      	BTFSS      STATUS, 0
0x002C	0x2854      	GOTO       L_main6
;Auto count 0 to 99.c,23 :: 		for(ones=0; ones<=9; ones++)
0x002D	0x01A2      	CLRF       main_ones_L1
L_main8:
0x002E	0x0822      	MOVF       main_ones_L1, 0
0x002F	0x3C09      	SUBLW      9
0x0030	0x1C03      	BTFSS      STATUS, 0
0x0031	0x2852      	GOTO       L_main9
;Auto count 0 to 99.c,25 :: 		seg2 = segment[tens];
0x0032	0x0823      	MOVF       main_tens_L1, 0
0x0033	0x3E24      	ADDLW      main_segment_L0
0x0034	0x0084      	MOVWF      FSR
0x0035	0x0800      	MOVF       INDF, 0
0x0036	0x0086      	MOVWF      PORTB
;Auto count 0 to 99.c,26 :: 		while(ones<=9)
L_main11:
0x0037	0x0822      	MOVF       main_ones_L1, 0
0x0038	0x3C09      	SUBLW      9
0x0039	0x1C03      	BTFSS      STATUS, 0
0x003A	0x2850      	GOTO       L_main12
;Auto count 0 to 99.c,28 :: 		seg1 = segment[ones++];
0x003B	0x0822      	MOVF       main_ones_L1, 0
0x003C	0x3E24      	ADDLW      main_segment_L0
0x003D	0x0084      	MOVWF      FSR
0x003E	0x0800      	MOVF       INDF, 0
0x003F	0x0087      	MOVWF      PORTC
0x0040	0x0AA2      	INCF       main_ones_L1, 1
;Auto count 0 to 99.c,29 :: 		delay_ms(1000);
0x0041	0x300B      	MOVLW      11
0x0042	0x00FB      	MOVWF      R11
0x0043	0x3026      	MOVLW      38
0x0044	0x00FC      	MOVWF      R12
0x0045	0x305D      	MOVLW      93
0x0046	0x00FD      	MOVWF      R13
L_main13:
0x0047	0x0BFD      	DECFSZ     R13, 1
0x0048	0x2847      	GOTO       L_main13
0x0049	0x0BFC      	DECFSZ     R12, 1
0x004A	0x2847      	GOTO       L_main13
0x004B	0x0BFB      	DECFSZ     R11, 1
0x004C	0x2847      	GOTO       L_main13
0x004D	0x0000      	NOP
0x004E	0x0000      	NOP
;Auto count 0 to 99.c,30 :: 		}
0x004F	0x2837      	GOTO       L_main11
L_main12:
;Auto count 0 to 99.c,23 :: 		for(ones=0; ones<=9; ones++)
0x0050	0x0AA2      	INCF       main_ones_L1, 1
;Auto count 0 to 99.c,31 :: 		}
0x0051	0x282E      	GOTO       L_main8
L_main9:
;Auto count 0 to 99.c,22 :: 		for(tens=0; tens<=9; tens++)
0x0052	0x0AA3      	INCF       main_tens_L1, 1
;Auto count 0 to 99.c,31 :: 		}
0x0053	0x2829      	GOTO       L_main5
L_main6:
;Auto count 0 to 99.c,32 :: 		}
0x0054	0x2826      	GOTO       L_main2
;Auto count 0 to 99.c,33 :: 		}
L_end_main:
0x0055	0x2855      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [83]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022       [1]    main_ones_L1
0x0023       [1]    main_tens_L1
0x0024      [10]    main_segment_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_end_main
  _main
