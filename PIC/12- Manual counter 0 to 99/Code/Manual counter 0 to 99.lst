;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/24/2020 8:53:52 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2843      	GOTO       67
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0820      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x000A	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x000B	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x000C	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x000D	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x000E	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x000F	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0010	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0011	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0012	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0013	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0014	0x2817      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0015	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0016	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0017	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0018	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0019	0x280F      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x001A	0x0008      	RETURN
; end of _Div_8X8_U
_display:
;Manual counter 0 to 99.c,12 :: 		char display(char num)
;Manual counter 0 to 99.c,15 :: 		char segment[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};      //for CC 7-SEG
0x001B	0x303F      	MOVLW      63
0x001C	0x1283      	BCF        STATUS, 5
0x001D	0x1303      	BCF        STATUS, 6
0x001E	0x00A4      	MOVWF      display_segment_L0
0x001F	0x3006      	MOVLW      6
0x0020	0x00A5      	MOVWF      display_segment_L0+1
0x0021	0x305B      	MOVLW      91
0x0022	0x00A6      	MOVWF      display_segment_L0+2
0x0023	0x304F      	MOVLW      79
0x0024	0x00A7      	MOVWF      display_segment_L0+3
0x0025	0x3066      	MOVLW      102
0x0026	0x00A8      	MOVWF      display_segment_L0+4
0x0027	0x306D      	MOVLW      109
0x0028	0x00A9      	MOVWF      display_segment_L0+5
0x0029	0x307D      	MOVLW      125
0x002A	0x00AA      	MOVWF      display_segment_L0+6
0x002B	0x3007      	MOVLW      7
0x002C	0x00AB      	MOVWF      display_segment_L0+7
0x002D	0x307F      	MOVLW      127
0x002E	0x00AC      	MOVWF      display_segment_L0+8
0x002F	0x306F      	MOVLW      111
0x0030	0x00AD      	MOVWF      display_segment_L0+9
;Manual counter 0 to 99.c,16 :: 		x = segment[num];
0x0031	0x0823      	MOVF       FARG_display_num, 0
0x0032	0x3E24      	ADDLW      display_segment_L0
0x0033	0x0084      	MOVWF      FSR
;Manual counter 0 to 99.c,17 :: 		return (x);
0x0034	0x0800      	MOVF       INDF, 0
0x0035	0x00F0      	MOVWF      R0
;Manual counter 0 to 99.c,18 :: 		}
L_end_display:
0x0036	0x0008      	RETURN
; end of _display
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0037	0x2003      	CALL       _____DoICP
0x0038	0x118A      	BCF        PCLATH, 3
0x0039	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x003A	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x003B	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x003C	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x003D	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x003E	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x003F	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0040	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0041	0x2837      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0042	0x0008      	RETURN
; end of ___CC2DW
_main:
;Manual counter 0 to 99.c,20 :: 		void main()
;Manual counter 0 to 99.c,22 :: 		char i, ones, tens, count = 0;
0x0043	0x1283      	BCF        STATUS, 5
0x0044	0x1303      	BCF        STATUS, 6
0x0045	0x01A2      	CLRF       main_count_L0
;Manual counter 0 to 99.c,23 :: 		trisb = 0;       trisd = 1;  //f1, f2 as I/P
0x0046	0x1683      	BSF        STATUS, 5
0x0047	0x0186      	CLRF       TRISB
0x0048	0x3001      	MOVLW      1
0x0049	0x0088      	MOVWF      TRISD
;Manual counter 0 to 99.c,24 :: 		portb = 0;       portd = 0;
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x0186      	CLRF       PORTB
0x004C	0x0188      	CLRF       PORTD
;Manual counter 0 to 99.c,26 :: 		for(;;)
L_main0:
;Manual counter 0 to 99.c,28 :: 		do
L_main3:
;Manual counter 0 to 99.c,30 :: 		tens = count/10;
0x004D	0x300A      	MOVLW      10
0x004E	0x00F4      	MOVWF      R4
0x004F	0x0822      	MOVF       main_count_L0, 0
0x0050	0x00F0      	MOVWF      R0
0x0051	0x200A      	CALL       _Div_8X8_U
;Manual counter 0 to 99.c,31 :: 		portb = display(tens);
0x0052	0x0870      	MOVF       R0, 0
0x0053	0x00A3      	MOVWF      FARG_display_num
0x0054	0x201B      	CALL       _display
0x0055	0x0870      	MOVF       R0, 0
0x0056	0x0086      	MOVWF      PORTB
;Manual counter 0 to 99.c,32 :: 		tens_GND = 1;   delay_ms(10);    tens_GND = 0;
0x0057	0x1508      	BSF        PORTD, 2
0x0058	0x301A      	MOVLW      26
0x0059	0x00FC      	MOVWF      R12
0x005A	0x30F8      	MOVLW      248
0x005B	0x00FD      	MOVWF      R13
L_main6:
0x005C	0x0BFD      	DECFSZ     R13, 1
0x005D	0x285C      	GOTO       L_main6
0x005E	0x0BFC      	DECFSZ     R12, 1
0x005F	0x285C      	GOTO       L_main6
0x0060	0x0000      	NOP
0x0061	0x1108      	BCF        PORTD, 2
;Manual counter 0 to 99.c,34 :: 		ones = count%10;
0x0062	0x300A      	MOVLW      10
0x0063	0x00F4      	MOVWF      R4
0x0064	0x0822      	MOVF       main_count_L0, 0
0x0065	0x00F0      	MOVWF      R0
0x0066	0x200A      	CALL       _Div_8X8_U
0x0067	0x0878      	MOVF       R8, 0
0x0068	0x00F0      	MOVWF      R0
;Manual counter 0 to 99.c,35 :: 		portb = display(ones);
0x0069	0x0870      	MOVF       R0, 0
0x006A	0x00A3      	MOVWF      FARG_display_num
0x006B	0x201B      	CALL       _display
0x006C	0x0870      	MOVF       R0, 0
0x006D	0x0086      	MOVWF      PORTB
;Manual counter 0 to 99.c,36 :: 		ones_GND = 1;   delay_ms(10);    ones_GND = 0;
0x006E	0x1488      	BSF        PORTD, 1
0x006F	0x301A      	MOVLW      26
0x0070	0x00FC      	MOVWF      R12
0x0071	0x30F8      	MOVLW      248
0x0072	0x00FD      	MOVWF      R13
L_main7:
0x0073	0x0BFD      	DECFSZ     R13, 1
0x0074	0x2873      	GOTO       L_main7
0x0075	0x0BFC      	DECFSZ     R12, 1
0x0076	0x2873      	GOTO       L_main7
0x0077	0x0000      	NOP
0x0078	0x1088      	BCF        PORTD, 1
;Manual counter 0 to 99.c,37 :: 		}while(start == 1);
0x0079	0x1808      	BTFSC      PORTD, 0
0x007A	0x284D      	GOTO       L_main3
;Manual counter 0 to 99.c,39 :: 		if(++count == 100)
0x007B	0x0AA2      	INCF       main_count_L0, 1
0x007C	0x0822      	MOVF       main_count_L0, 0
0x007D	0x3A64      	XORLW      100
0x007E	0x1D03      	BTFSS      STATUS, 2
0x007F	0x2881      	GOTO       L_main8
;Manual counter 0 to 99.c,40 :: 		count = 0;
0x0080	0x01A2      	CLRF       main_count_L0
L_main8:
;Manual counter 0 to 99.c,42 :: 		do
L_main9:
;Manual counter 0 to 99.c,44 :: 		tens = count/10;
0x0081	0x300A      	MOVLW      10
0x0082	0x00F4      	MOVWF      R4
0x0083	0x0822      	MOVF       main_count_L0, 0
0x0084	0x00F0      	MOVWF      R0
0x0085	0x200A      	CALL       _Div_8X8_U
;Manual counter 0 to 99.c,45 :: 		portb = display(tens);
0x0086	0x0870      	MOVF       R0, 0
0x0087	0x00A3      	MOVWF      FARG_display_num
0x0088	0x201B      	CALL       _display
0x0089	0x0870      	MOVF       R0, 0
0x008A	0x0086      	MOVWF      PORTB
;Manual counter 0 to 99.c,46 :: 		tens_GND = 1;   delay_ms(10);    tens_GND = 0;
0x008B	0x1508      	BSF        PORTD, 2
0x008C	0x301A      	MOVLW      26
0x008D	0x00FC      	MOVWF      R12
0x008E	0x30F8      	MOVLW      248
0x008F	0x00FD      	MOVWF      R13
L_main12:
0x0090	0x0BFD      	DECFSZ     R13, 1
0x0091	0x2890      	GOTO       L_main12
0x0092	0x0BFC      	DECFSZ     R12, 1
0x0093	0x2890      	GOTO       L_main12
0x0094	0x0000      	NOP
0x0095	0x1108      	BCF        PORTD, 2
;Manual counter 0 to 99.c,48 :: 		ones = count%10;
0x0096	0x300A      	MOVLW      10
0x0097	0x00F4      	MOVWF      R4
0x0098	0x0822      	MOVF       main_count_L0, 0
0x0099	0x00F0      	MOVWF      R0
0x009A	0x200A      	CALL       _Div_8X8_U
0x009B	0x0878      	MOVF       R8, 0
0x009C	0x00F0      	MOVWF      R0
;Manual counter 0 to 99.c,49 :: 		portb = display(ones);
0x009D	0x0870      	MOVF       R0, 0
0x009E	0x00A3      	MOVWF      FARG_display_num
0x009F	0x201B      	CALL       _display
0x00A0	0x0870      	MOVF       R0, 0
0x00A1	0x0086      	MOVWF      PORTB
;Manual counter 0 to 99.c,50 :: 		ones_GND = 1;   delay_ms(10);    ones_GND = 0;
0x00A2	0x1488      	BSF        PORTD, 1
0x00A3	0x301A      	MOVLW      26
0x00A4	0x00FC      	MOVWF      R12
0x00A5	0x30F8      	MOVLW      248
0x00A6	0x00FD      	MOVWF      R13
L_main13:
0x00A7	0x0BFD      	DECFSZ     R13, 1
0x00A8	0x28A7      	GOTO       L_main13
0x00A9	0x0BFC      	DECFSZ     R12, 1
0x00AA	0x28A7      	GOTO       L_main13
0x00AB	0x0000      	NOP
0x00AC	0x1088      	BCF        PORTD, 1
;Manual counter 0 to 99.c,51 :: 		}while(start == 0);
0x00AD	0x1C08      	BTFSS      PORTD, 0
0x00AE	0x2881      	GOTO       L_main9
;Manual counter 0 to 99.c,52 :: 		}
0x00AF	0x284D      	GOTO       L_main0
;Manual counter 0 to 99.c,53 :: 		}
L_end_main:
0x00B0	0x28B0      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [17]    _Div_8X8_U
0x001B      [28]    _display
0x0037      [12]    ___CC2DW
0x0043     [110]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022       [1]    main_count_L0
0x0023       [1]    FARG_display_num
0x0024      [10]    display_segment_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0088       [1]    TRISD
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_end_display
  _display
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
