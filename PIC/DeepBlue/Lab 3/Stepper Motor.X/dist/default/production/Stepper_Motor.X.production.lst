

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 11 04:25:28 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0006                     _PORTB	set	6
   165  0038                     _RC0	set	56
   166  0086                     _TRISB	set	134
   167                           
   168                           	psect	cinit
   169  07FC                     start_initialization:	
   170                           ; #config settings
   171                           
   172  07FC                     __initialization:
   173  07FC                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176  07FC                     __end_of__initialization:
   177  07FC  0183               	clrf	3
   178  07FD  120A  118A  2F56   	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	cstackCOMMON
   181  0070                     __pcstackCOMMON:
   182  0070                     ?_main:
   183  0070                     ??_main:	
   184                           ; 1 bytes @ 0x0
   185                           
   186                           
   187                           ; 1 bytes @ 0x0
   188  0070                     	ds	3
   189  0073                     main@j:
   190                           
   191                           ; 2 bytes @ 0x3
   192  0073                     	ds	2
   193  0075                     main@j_38:
   194                           
   195                           ; 2 bytes @ 0x5
   196  0075                     	ds	2
   197  0077                     main@i_39:
   198                           
   199                           ; 2 bytes @ 0x7
   200  0077                     	ds	2
   201  0079                     main@i:
   202                           
   203                           ; 1 bytes @ 0x9
   204  0079                     	ds	1
   205                           
   206                           	psect	maintext
   207  0756                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 14 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  i               2    7[COMMON] int 
   218 ;;  j               2    5[COMMON] int 
   219 ;;  j               2    3[COMMON] int 
   220 ;;  i               1    9[COMMON] unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, btemp+1
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         7       0       0       0       0
   232 ;;      Temps:          3       0       0       0       0
   233 ;;      Totals:        10       0       0       0       0
   234 ;;Total ram usage:       10 bytes
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           
   243                           ;psect for function _main
   244  0756                     _main:
   245  0756                     l617:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   248                           
   249                           
   250                           ;main.c: 16:     unsigned char i=0;
   251  0756  01F9               	clrf	main@i
   252                           
   253                           ;main.c: 18:     TRISB = 0x00;
   254  0757  1683               	bsf	3,5	;RP0=1, select bank1
   255  0758  1303               	bcf	3,6	;RP1=0, select bank1
   256  0759  0186               	clrf	6	;volatile
   257                           
   258                           ;main.c: 19:     PORTB = 0x00;
   259  075A  1283               	bcf	3,5	;RP0=0, select bank0
   260  075B  1303               	bcf	3,6	;RP1=0, select bank0
   261  075C  0186               	clrf	6	;volatile
   262  075D                     l13:	
   263                           ;main.c: 20:     while (RC0 == 0);
   264                           
   265  075D  1C07               	btfss	7,0	;volatile
   266  075E  2F60               	goto	u11
   267  075F  2F61               	goto	u10
   268  0760                     u11:
   269  0760  2F5D               	goto	l13
   270  0761                     u10:
   271  0761                     l619:
   272                           
   273                           ;main.c: 22:     {;main.c: 23:         for (int j = 0; j<=45; j++)
   274  0761  01F3               	clrf	main@j
   275  0762  01F4               	clrf	main@j+1
   276  0763                     l625:
   277                           
   278                           ;main.c: 24:         {;main.c: 25:             PORTB = (1<<i);
   279  0763  3001               	movlw	1
   280  0764  00F0               	movwf	??_main
   281  0765  0A79               	incf	main@i,w
   282  0766  2F69               	goto	u24
   283  0767                     u25:
   284  0767  1003               	clrc
   285  0768  0DF0               	rlf	??_main,f
   286  0769                     u24:
   287  0769  3EFF               	addlw	-1
   288  076A  1D03               	skipz
   289  076B  2F67               	goto	u25
   290  076C  0870               	movf	??_main,w
   291  076D  1283               	bcf	3,5	;RP0=0, select bank0
   292  076E  1303               	bcf	3,6	;RP1=0, select bank0
   293  076F  0086               	movwf	6	;volatile
   294  0770                     l627:
   295                           
   296                           ;main.c: 26:             i++;
   297  0770  3001               	movlw	1
   298  0771  00FF               	movwf	btemp+1
   299  0772  087F               	movf	btemp+1,w
   300  0773  07F9               	addwf	main@i,f
   301  0774                     l629:
   302                           
   303                           ;main.c: 27:             _delay((unsigned long)((100)*(8000000/4000.0)));
   304  0774  3002               	movlw	2
   305  0775  00F2               	movwf	??_main+2
   306  0776  3004               	movlw	4
   307  0777  00F1               	movwf	??_main+1
   308  0778  30BA               	movlw	186
   309  0779  00F0               	movwf	??_main
   310  077A                     u87:
   311  077A  0BF0               	decfsz	??_main,f
   312  077B  2F7A               	goto	u87
   313  077C  0BF1               	decfsz	??_main+1,f
   314  077D  2F7A               	goto	u87
   315  077E  0BF2               	decfsz	??_main+2,f
   316  077F  2F7A               	goto	u87
   317  0780  0000               	nop
   318  0781                     l631:
   319                           
   320                           ;main.c: 28:             if (i == 4)
   321  0781  3004               	movlw	4
   322  0782  0679               	xorwf	main@i,w
   323  0783  1D03               	btfss	3,2
   324  0784  2F86               	goto	u31
   325  0785  2F87               	goto	u30
   326  0786                     u31:
   327  0786  2F88               	goto	l635
   328  0787                     u30:
   329  0787                     l633:
   330                           
   331                           ;main.c: 29:                 i=0;
   332  0787  01F9               	clrf	main@i
   333  0788                     l635:
   334                           
   335                           ;main.c: 30:         }
   336  0788  3001               	movlw	1
   337  0789  07F3               	addwf	main@j,f
   338  078A  1803               	skipnc
   339  078B  0AF4               	incf	main@j+1,f
   340  078C  3000               	movlw	0
   341  078D  07F4               	addwf	main@j+1,f
   342  078E                     l637:
   343  078E  0874               	movf	main@j+1,w
   344  078F  3A80               	xorlw	128
   345  0790  00FF               	movwf	btemp+1
   346  0791  3080               	movlw	128
   347  0792  027F               	subwf	btemp+1,w
   348  0793  1D03               	skipz
   349  0794  2F97               	goto	u45
   350  0795  302E               	movlw	46
   351  0796  0273               	subwf	main@j,w
   352  0797                     u45:
   353  0797  1C03               	skipc
   354  0798  2F9A               	goto	u41
   355  0799  2F9B               	goto	u40
   356  079A                     u41:
   357  079A  2F63               	goto	l625
   358  079B                     u40:
   359  079B                     l639:
   360                           
   361                           ;main.c: 31:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   362  079B  300B               	movlw	11
   363  079C  00F2               	movwf	??_main+2
   364  079D  3026               	movlw	38
   365  079E  00F1               	movwf	??_main+1
   366  079F  305D               	movlw	93
   367  07A0  00F0               	movwf	??_main
   368  07A1                     u97:
   369  07A1  0BF0               	decfsz	??_main,f
   370  07A2  2FA1               	goto	u97
   371  07A3  0BF1               	decfsz	??_main+1,f
   372  07A4  2FA1               	goto	u97
   373  07A5  0BF2               	decfsz	??_main+2,f
   374  07A6  2FA1               	goto	u97
   375  07A7  2FA8               	nop2
   376  07A8                     l641:
   377                           
   378                           ;main.c: 32:         for (int j = 0, i = 0; j<=45; j++)
   379  07A8  01F5               	clrf	main@j_38
   380  07A9  01F6               	clrf	main@j_38+1
   381  07AA                     l643:
   382  07AA  01F7               	clrf	main@i_39
   383  07AB  01F8               	clrf	main@i_39+1
   384  07AC                     l649:
   385                           
   386                           ;main.c: 33:         {;main.c: 34:             PORTB = (8>>i++);
   387  07AC  0A77               	incf	main@i_39,w
   388  07AD  00FF               	movwf	btemp+1
   389  07AE  3008               	movlw	8
   390  07AF  00F0               	movwf	??_main
   391  07B0  3000               	movlw	0
   392  07B1  00F1               	movwf	??_main+1
   393  07B2  2FB6               	goto	u54
   394  07B3                     u55:
   395  07B3  0D71               	rlf	??_main+1,w
   396  07B4  0CF1               	rrf	??_main+1,f
   397  07B5  0CF0               	rrf	??_main,f
   398  07B6                     u54:
   399  07B6  0BFF               	decfsz	btemp+1,f
   400  07B7  2FB3               	goto	u55
   401  07B8  0870               	movf	??_main,w
   402  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   403  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   404  07BB  0086               	movwf	6	;volatile
   405  07BC                     l651:
   406  07BC  3001               	movlw	1
   407  07BD  07F7               	addwf	main@i_39,f
   408  07BE  1803               	skipnc
   409  07BF  0AF8               	incf	main@i_39+1,f
   410  07C0  3000               	movlw	0
   411  07C1  07F8               	addwf	main@i_39+1,f
   412  07C2                     l653:
   413                           
   414                           ;main.c: 35:             _delay((unsigned long)((100)*(8000000/4000.0)));
   415  07C2  3002               	movlw	2
   416  07C3  00F2               	movwf	??_main+2
   417  07C4  3004               	movlw	4
   418  07C5  00F1               	movwf	??_main+1
   419  07C6  30BA               	movlw	186
   420  07C7  00F0               	movwf	??_main
   421  07C8                     u107:
   422  07C8  0BF0               	decfsz	??_main,f
   423  07C9  2FC8               	goto	u107
   424  07CA  0BF1               	decfsz	??_main+1,f
   425  07CB  2FC8               	goto	u107
   426  07CC  0BF2               	decfsz	??_main+2,f
   427  07CD  2FC8               	goto	u107
   428  07CE  0000               	nop
   429  07CF                     l655:
   430                           
   431                           ;main.c: 36:             if (i == 4)
   432  07CF  3004               	movlw	4
   433  07D0  0677               	xorwf	main@i_39,w
   434  07D1  0478               	iorwf	main@i_39+1,w
   435  07D2  1D03               	btfss	3,2
   436  07D3  2FD5               	goto	u61
   437  07D4  2FD6               	goto	u60
   438  07D5                     u61:
   439  07D5  2FD8               	goto	l659
   440  07D6                     u60:
   441  07D6                     l657:
   442                           
   443                           ;main.c: 37:                 i=0;
   444  07D6  01F7               	clrf	main@i_39
   445  07D7  01F8               	clrf	main@i_39+1
   446  07D8                     l659:
   447                           
   448                           ;main.c: 38:         }
   449  07D8  3001               	movlw	1
   450  07D9  07F5               	addwf	main@j_38,f
   451  07DA  1803               	skipnc
   452  07DB  0AF6               	incf	main@j_38+1,f
   453  07DC  3000               	movlw	0
   454  07DD  07F6               	addwf	main@j_38+1,f
   455  07DE                     l661:
   456  07DE  0876               	movf	main@j_38+1,w
   457  07DF  3A80               	xorlw	128
   458  07E0  00FF               	movwf	btemp+1
   459  07E1  3080               	movlw	128
   460  07E2  027F               	subwf	btemp+1,w
   461  07E3  1D03               	skipz
   462  07E4  2FE7               	goto	u75
   463  07E5  302E               	movlw	46
   464  07E6  0275               	subwf	main@j_38,w
   465  07E7                     u75:
   466  07E7  1C03               	skipc
   467  07E8  2FEA               	goto	u71
   468  07E9  2FEB               	goto	u70
   469  07EA                     u71:
   470  07EA  2FAC               	goto	l649
   471  07EB                     u70:
   472  07EB                     l663:
   473                           
   474                           ;main.c: 39:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   475  07EB  300B               	movlw	11
   476  07EC  00F2               	movwf	??_main+2
   477  07ED  3026               	movlw	38
   478  07EE  00F1               	movwf	??_main+1
   479  07EF  305D               	movlw	93
   480  07F0  00F0               	movwf	??_main
   481  07F1                     u117:
   482  07F1  0BF0               	decfsz	??_main,f
   483  07F2  2FF1               	goto	u117
   484  07F3  0BF1               	decfsz	??_main+1,f
   485  07F4  2FF1               	goto	u117
   486  07F5  0BF2               	decfsz	??_main+2,f
   487  07F6  2FF1               	goto	u117
   488  07F7  2FF8               	nop2
   489  07F8  2F61               	goto	l619
   490  07F9  120A  118A  2800   	ljmp	start
   491  07FC                     __end_of_main:
   492  007E                     btemp	set	126	;btemp
   493  007E                     wtemp0	set	126
   494                           
   495                           	psect	config
   496                           
   497                           ;Config register CONFIG @ 0x2007
   498                           ;	Oscillator Selection bits
   499                           ;	FOSC = HS, HS oscillator
   500                           ;	Watchdog Timer Enable bit
   501                           ;	WDTE = OFF, WDT disabled
   502                           ;	Power-up Timer Enable bit
   503                           ;	PWRTE = ON, PWRT enabled
   504                           ;	Brown-out Reset Enable bit
   505                           ;	BOREN = ON, BOR enabled
   506                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   507                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   508                           ;	Data EEPROM Memory Code Protection bit
   509                           ;	CPD = OFF, Data EEPROM code protection off
   510                           ;	Flash Program Memory Write Enable bits
   511                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   512                           ;	In-Circuit Debugger Mode bit
   513                           ;	DEBUG = 0x1, unprogrammed default
   514                           ;	Flash Program Memory Code Protection bit
   515                           ;	CP = OFF, Code protection off
   516  2007                     	org	8199
   517  2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     120
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 11 04:25:28 2020

                     l13 075D                       u10 0761                       u11 0760  
                     u30 0787                       u31 0786                       u40 079B  
                     u24 0769                       u41 079A                       u25 0767  
                     u60 07D6                       u61 07D5                       u45 0797  
                     u70 07EB                       u54 07B6                       u71 07EA  
                     u55 07B3                       u75 07E7                       u87 077A  
                     u97 07A1                      l631 0781                      l641 07A8  
                    l633 0787                      l625 0763                      l617 0756  
                    l651 07BC                      l643 07AA                      l635 0788  
                    l627 0770                      l619 0761                      l661 07DE  
                    l653 07C2                      l637 078E                      l629 0774  
                    l663 07EB                      l655 07CF                      l639 079B  
                    l657 07D6                      l649 07AC                      l659 07D8  
                    _RC0 0038                      u107 07C8                      u117 07F1  
                   _main 0756                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  main@i 0079                    main@j 0073                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0756     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            __size_of_main 00A6                 main@i_39 0077  
               main@j_38 0075  
